# Выполнил Серкин Д.А.
# MUL_ZZ_Z()
# Z-8

# Задание:
# Умножение целых чисел

# Входные данные (два целых числа, представленных следующим образом):
# Целое число (b, n; A[..]) - знак числа (1 — минус, 0 — плюс) номер старшей позиции и массив цифр


# Используемые модули:
# 1) POZ_Z_D   Абсолютная величина числа, результат - натуральное
# 2) ABS_Z_N   Определение положительности числа (2 - положительное, 0 — равное нулю, 1 - отрицательное)
# 3) MUL_NN_N  Умножение натуральных чисел




def MUL_ZZ_Z(b1, n1, A1, b2, n2, A2):
    
    # Дважды вызывается функция POZ_Z_D() для определения знака каждого из двух чисел
    b_1 = POZ_Z_D(b1, n1, A1)
    b_2 = POZ_Z_D(b2, n2, A2)
    
    # Если хотя бы одно число 0, то результат умножения есть 0.
    # На основании этого делаем проверку на наличие 0
    if (b_1 == 0 or b_2 == 0):
        b = 0
        n = 1
        A = [0]
    else:
        # Вызываем функцию ABS_Z_N() дважды для получения абсолютной велечины каждого числа  
        n_1, A_1 = ABS_Z_N(b1, n1, A1)
        n_2, A_2 = ABS_Z_N(b2, n2, A2)
        
        # Далее вызываем фнкцию MUL_NN_N(), которая перемножает два натуральных числа
        n, A = MUL_NN_N(n1, A1, n2, A2)
        
        # Определяем знак числа, так как натуральные числа всегда положительные, 
        # а функция перемножает целые.
        b = (b_1+b_2) % 2 
    
    return [b, n, A]
