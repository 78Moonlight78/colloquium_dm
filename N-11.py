# Выполнил Егоров И.М

# Входные данные:
# Программа принимает на вход n1 - длина массива числа arr1 - число. n2 - длина второго числа arr2 - второе число.

# Алгоритм:
# Создаем результирующий массив k. s - длина массива k. С помощью функции DIV_NN_Dk вычисляем первую цифру частного (arr1 / arr2)
# Прибалвеям ее в результирующий массив k. С помощью функции MUL_Nk_N умножаем делитель (arr2) на 10 в степени k_t.
# Вычитаем с помощью функции SUB_NDN_N из arr1 число полученное число t_2 длины t_1 (это arr2 умноженное на 10**k_t)
# Прибавляем 1 к длине резултата. 

# Выходные данные:
# Возвращаем результирующий массив k (частное от деления arr1 на arr2 без остатка) и длину этого массива (k) s.
def DIV_NN_N(n_1, arr_1, n_2, arr_2):
    d_t, k_t = DIV_NN_Dk(n_1, arr_1, n_2, arr_2)
    s = k_t
    k = [0 for i in range(s+1)]
    while (k_t != 0):
        k[s - k_t] = d_t
        t_1, t_2 = MUL_Nk_N(n_2, arr_2, k_t)
        n_1, arr_1 = SUB_NDN_N(n_1, arr_1, t_1, t_2, d_t)
        d_t, k_t = DIV_NN_Dk(n_1, arr_1, n_2, arr_2)
    k[s - k_t] = d_t
    return [s, k]

a = [2,8,5,5,9]
b = [6]
print(DIV_NN_N(len(a), a,len(b) , b))
