# Задача Q-2: "Проверка рационального числа на целое"
# Выполнил Богданов Г.В.

# Входные данные:
# Программа принимает на вход два числа: целое и натуральное, представленные следующим образом:
# Целое число (числитель) (b, n; A[..]) - знак числа (1 — минус, 0 — плюс), номер старшей позиции и массив цифр.
# Натуральное число (знаменатель) (n; A[..]) - номер старшей позиции и массив цифр.

# Алгоритм:
# Если числитель равен 0, то программа возвращает 1
# Если числитель не равен 0, но имеет меньшее количество разрядов, чем у знаменателя, то программа возвращает 0.
# Если количество разрядов числителя больше или равно количеству разрядов знаменателя, то программа вычитает из
# числителя знаменатель до тех пор, пока он не станет меньше знаменателя или равным нулю. Если числитель будет равен
# нулю, то программа возвращает 1, а если меньше знаменателя, то возвращает 0.

# Выходные данные:
# Если число целое, программа возвращает 1, в противном случае программа возвращает 0.

def INT_Q_B(b1, n1, A1, n2, A2):
    def longSubtracting(l1, a1, l2, a2):
        a1 = a1[::-1]
        a2 = a2[::-1]
        while l2 != l1:
            a2 = a2 + [0]
            l2 += 1
        c = []
        carry = 0
        i = 0
        while i < l2 or carry != 0:
            c.append(carry)
            c[i] += a1[i] - a2[i] if i < l2 else 0
            carry = c[i] // 10
            c[i] = c[i] % 10
            i += 1
        while len(c) > 1 and c[-1] == 0:
            c.pop(-1)
        return c[::-1]

    def longComparing(l1, a1, l2, a2):
        if l1 > l2:
            return 0
        elif l1 < l2:
            return 2
        else:
            for i in range(0, l1):
                if a1[i] > a2[i]:
                    return 0
                elif a1[i] < a2[i]:
                    return 2
            return 1

    if n1 == 1 and A1[0] == 0:
        return 1
    elif n1 < n2 or longComparing(n1, A1, n2, A2) == 2:
        return 0
    else:
        x = longSubtracting(n1, A1, n2, A2)
        while longComparing(len(x), x, n2, A2) < 2:
            x = longSubtracting(len(x), x, n2, A2)
        if x[0] == 0:
            return 1
        else:
            return 0
